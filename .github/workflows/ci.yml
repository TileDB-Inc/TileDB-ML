name: TileDB-ML CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        ml-deps:
          - "scikit-learn=1.0 pytorch=1.8.1 tensorflow=2.4.3 numpy=1.19"
          - "scikit-learn=1.0 pytorch=1.9.1 tensorflow=2.4.1 numpy=1.19"
          - "scikit-learn=1.0 pytorch=1.10 tensorflow=2.4.1 numpy=1.19"
          - "scikit-learn=1.0 pytorch=1.11 tensorflow=2.4.1 numpy=1.19"
          # remove the previous two lines and uncomment the next two after 2.6+ support
          # - "scikit-learn=1.0 pytorch=1.10  tensorflow=2.6.2=cpu*"
          # - "scikit-learn=1.0 pytorch=1.11  tensorflow=2.7.0=cpu*"
    env:
      run_coverage: ${{ github.ref == 'refs/heads/master' }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: "3.7"
        mamba-version: "*"
        channels: conda-forge,defaults

    - name: Install dependencies
      run: mamba install pytest-mock pytest-cov ${{ matrix.ml-deps }}

    - name: Install TileDB-ML
      run: pip install -e .[cloud]

    - name: Run mypy
      run: |
        conda activate base
        mamba install mypy
        mypy .

    - name: Run tests
      if: ${{ !fromJSON(env.run_coverage) }}
      run: pytest --disable-warnings tests/

    - name: Run test coverage statistics
      id: stats
      if: ${{ fromJSON(env.run_coverage) }}
      run: |
        pytest --disable-warnings --cov-report=term-missing --cov=tiledb tests/ | tee coverage.txt
        TEST_COVERAGE="$(grep '^TOTAL' coverage.txt | awk -v N=4 '{print $N}')"
        echo "::set-output name=COVERAGE::$TEST_COVERAGE"

    - name: Create Test Coverage Badge
      if: ${{ fromJSON(env.run_coverage) }}
      uses: schneegans/dynamic-badges-action@v1.1.0
      with:
        auth: ${{ secrets.COVERAGE_SECRET }}
        gistID: 2506f6c9d3375e2d636cf594340d11bf
        filename: gistfile.json
        label: Test Coverage
        message: ${{ steps.stats.outputs.COVERAGE }}
        color: green
        namedLogo: pytest
